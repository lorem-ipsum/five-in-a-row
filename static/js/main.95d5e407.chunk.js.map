{"version":3,"sources":["Game.js","index.js"],"names":["Square","props","className","onClick","key","i","iswinning","isWinning","value","Board","state","size","this","squares","winningSeq","indexOf","arr","j","push","map","v","renderSquare","renderARow","React","Component","Game","handleClick","bind","history","Array","fill","stepNumber","xIsNext","historyPoints","seq","NaN","cur","t","Math","floor","slice","length","calculateWinner","setState","concat","step","status","current","winnerDesc","winner","moves","move","hpsm","desc","jumpTo","isNaN","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95d5e407.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = (props) => {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n      key={props.i}\n      iswinning={props.isWinning}\n    >\n      {props.value}\n    </button>\n  )\n}\n\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      size: props.size,\n      // winningSeq: props.winningSeq\n    }\n  }\n\n  renderSquare(i) {\n    // console.log(\"In renderSQUARE\", this.props.winningSeq)\n    return <Square\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n      key={i}\n      isWinning={(this.props.winningSeq && this.props.winningSeq.indexOf(i) !== -1) ? \"true\" : \"false\"}\n    />;\n  }\n\n  renderARow(i) {\n    let arr = []\n    for (let j = 0; j < this.state.size; ++j) {\n      arr.push(j)\n    }\n    return (\n      <div className=\"board-row\" key={i}>\n        {arr.map((v, j) => this.renderSquare(i * this.state.size + j))}\n      </div>\n    )\n  }\n\n  render() {\n    let arr = []\n    for (let j = 0; j < this.state.size; ++j) {\n      arr.push(j)\n    }\n\n    return (\n      <div>\n        {arr.map((v, j) => this.renderARow(j))}\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.state = {\n      size: this.props.size,\n      history: [{\n        squares: Array(this.props.size * this.props.size).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      historyPoints: { seq: [NaN], cur: 1 },\n      // winningSeq: []\n    }\n  }\n\n  calculateWinner(size, squares) {\n    for (let t = 0; t < size * size; ++t) {\n      if (squares[t] &&\n        t % size + 4 < size &&\n        squares[t] === squares[t + 1] &&\n        squares[t] === squares[t + 2] &&\n        squares[t] === squares[t + 3] &&\n        squares[t] === squares[t + 4]) {\n        return [squares[t], [t, t + 1, t + 2, t + 3, t + 4]]\n      }\n      if (squares[t] &&\n        Math.floor(t / size) + 4 < size &&\n        squares[t] === squares[t + size] &&\n        squares[t] === squares[t + 2 * size] &&\n        squares[t] === squares[t + 3 * size] &&\n        squares[t] === squares[t + 4 * size]) {\n        return [squares[t], [t, t + size, t + 2 * size, t + 3 * size, t + 4 * size]]\n      }\n      if (squares[t] &&\n        t % size + 4 < size &&\n        Math.floor(t / size) + 4 < size &&\n        squares[t] === squares[t + size + 1] &&\n        squares[t] === squares[t + 2 * (size + 1)] &&\n        squares[t] === squares[t + 3 * (size + 1)] &&\n        squares[t] === squares[t + 4 * (size + 1)]) {\n        return [squares[t], [t, t + size + 1, t + 2 * (size + 1), t + 3 * (size + 1), t + 4 * (size + 1)]]\n      }\n      if (squares[t] &&\n        t % size - 4 >= 0 &&\n        Math.floor(t / size) + 4 < size &&\n        squares[t] === squares[t + size - 1] &&\n        squares[t] === squares[t + 2 * (size - 1)] &&\n        squares[t] === squares[t + 3 * (size - 1)] &&\n        squares[t] === squares[t + 4 * (size - 1)]) {\n        return [squares[t], [t, t + size - 1, t + 2 * (size - 1), t + 3 * (size - 1), t + 4 * (size - 1)]]\n      }\n    }\n    return null\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]\n    const squares = current.squares.slice()\n    if (this.calculateWinner(this.state.size, squares) || squares[i]) {\n      return\n    }\n    squares[i] = this.state.xIsNext ? '●' : '○'\n    this.setState({\n      historyPoints: { seq: this.state.historyPoints.seq.slice(0, this.state.stepNumber + 1).concat(i), cur: this.state.historyPoints.cur + 1 },\n      history: history.concat([{ squares }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    })\n  }\n\n  jumpTo(step) {\n    this.setState(() => ({\n      historyPoints: { seq: this.state.historyPoints.seq.slice(), cur: step },\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    }))\n  }\n\n  render() {\n    const history = this.state.history\n    const current = history[this.state.stepNumber]\n    const winnerDesc = this.calculateWinner(this.state.size, current.squares)\n    const winner = winnerDesc\n      ? winnerDesc[0]\n      : null\n    const winningSeq = winnerDesc\n      ? winnerDesc[1]\n      : null\n\n    const moves = history.map((step, move) => {\n      const hpsm = this.state.historyPoints.seq[move]\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start'\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)} className=\"btn btn-sm btn-outline-secondary mt-1\">{desc}</button>\n          {!isNaN(hpsm) &&\n            move <= this.state.historyPoints.cur &&\n            <small className=\"text-muted d-inline ml-2\"> {move % 2 ? '●' : '○'} ({Math.floor(hpsm / this.state.size) + 1}, {hpsm % this.state.size + 1})</small>}\n        </li>\n      )\n    })\n\n    let status\n    if (winner) {\n      status = 'Winner: ' + winner\n    } else if (this.state.stepNumber < this.state.size * this.state.size) {\n      status = 'Next player: ' + (this.state.xIsNext ? '●' : '○')\n    } else {\n      status = 'Draw'\n    }\n\n    winningSeq && console.log(\"winningSeq\", winningSeq)\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-4 text-center my-5\">five-in-a-row</h1>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n              size={this.state.size}\n              winningSeq={winningSeq}\n            />\n          </div>\n          <div className=\"game-info ml-5\">\n            <div className=\"h4 ml-4\">{status}</div>\n            <ul>{moves}</ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game size={9} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}